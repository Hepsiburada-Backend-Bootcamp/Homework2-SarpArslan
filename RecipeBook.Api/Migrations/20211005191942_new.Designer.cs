// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RecipeBook.Infastracture.Context;

namespace RecipeBookApi.Migrations
{
    [DbContext(typeof(RecipeBookDbContext))]
    [Migration("20211005191942_new")]
    partial class @new
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("RecipeBook.Domain.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<int>("Stars")
                        .HasColumnType("integer")
                        .HasColumnName("stars");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 25,
                            Name = "Sarp",
                            Stars = 5,
                            Surname = "Arslan"
                        },
                        new
                        {
                            Id = 2,
                            Age = 22,
                            Name = "Mike",
                            Stars = 5,
                            Surname = "Corc"
                        },
                        new
                        {
                            Id = 3,
                            Age = 19,
                            Name = "Dummy",
                            Stars = 6,
                            Surname = "Dumm"
                        });
                });

            modelBuilder.Entity("RecipeBook.Domain.Entities.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("FoodType")
                        .HasColumnType("integer")
                        .HasColumnName("food_type");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            FoodType = 0,
                            Name = "Menemen"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            FoodType = 0,
                            Name = "Tost"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            FoodType = 0,
                            Name = "Kebap"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            FoodType = 0,
                            Name = "Dumm"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 2,
                            FoodType = 0,
                            Name = "DumHamburger"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            FoodType = 0,
                            Name = "Kebap"
                        });
                });

            modelBuilder.Entity("RecipeBook.Domain.Entities.Food", b =>
                {
                    b.HasOne("RecipeBook.Domain.Entities.Author", "Author")
                        .WithMany("Foods")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("RecipeBook.Domain.Entities.Author", b =>
                {
                    b.Navigation("Foods");
                });
#pragma warning restore 612, 618
        }
    }
}
